---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  timeout: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 55.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    crds: CreateReplace
    timeout: 30m
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    timeout: 30m
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      enabled: false
    nodeExporter:
      enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels: ["node"]
            targetLabel: instance
    kube-state-metrics:
      metricLabelsAllowlist: ["persistentvolumeclaims=[*]"]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - "10.0.31.101"
        - "10.0.31.102"
        - "10.0.31.103"
    kubeScheduler:
      enabled: true
      endpoints:
        - "10.0.31.101"
        - "10.0.31.102"
        - "10.0.31.103"
    kubeProxy:
      enabled: false # Enable if not using eBPF
      # endpoints: ["192.168.42.10", "192.168.42.11", "192.168.42.12"]
    kubeEtcd:
      enabled: true
      endpoints:
        - "10.0.31.101"
        - "10.0.31.102"
        - "10.0.31.103"
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    grafana:
      enabled: false
    coreDns:
      enabled: true
    prometheus:
      ingress:
        enabled: false
      prometheusSpec:
        replicas: 1
        retention: 2d
        retentionSize: 50GB
        enableAdminAPI: true
        walCompression: true
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        resources:
          requests:
            cpu: 150m
            memory: 4Gi
          limits:
            memory: 8Gi
        # NOTE: This is needed due to how Kubernetes handles filesystem permissions of hostPath PVCs.
        # More info: https://github.com/prometheus/prometheus/issues/5976#issuecomment-881910837
        initContainers:
          - name: prometheus-data-permission-setup
            image: busybox
            command:
              ["/bin/chown", "-R", "1000:1000", "/arbitrary-path/prometheus"]
            volumeMounts:
              - name: prometheus-kube-prometheus-stack-db
                mountPath: /arbitrary-path/prometheus
            # Runs the initContainer as root so that the initContainer can chown
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          runAsGroup: 1000
          fsGroup: 2000
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              resources:
                requests:
                  storage: 60Gi
