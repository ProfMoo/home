---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  timeout: 20m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # Values available here:
  # https://github.com/rook/rook/blob/master/deploy/charts/rook-ceph-cluster/values.yaml
  values:
    # This default to rook-ceph if not set:
    # https://rook.io/docs/rook/latest-release/Helm-Charts/ceph-cluster-chart/#installing
    operatorNamespace: storage
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.drmoo.io
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          cert-manager.io/secret-name: "drmoo-io-tls"
        tls:
          - hosts:
              - "*.drmoo.io"
            secretName: drmoo-io-tls
        ingressClassName: internal
        host:
          name: rook.drmoo.io
          path: /
    toolbox:
      enabled: true
    # https://rook.io/docs/rook/latest-release/Helm-Charts/ceph-cluster-chart/#ceph-cluster-spec
    # Specificaly the CRD: https://rook.io/docs/rook/latest-release/CRDs/Cluster/ceph-cluster-crd/
    # Even more specifically, the ceph configuration options: https://docs.ceph.com/en/latest/rados/configuration/general-config-ref/
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
        mgr:
          mgr/crash/warn_recent_interval: '7200' # 2h
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: true
        useAllDevices: false
        # This value with 'by-id' is assigned from the standard Linux device naming convention.
        # The device is available at `sdb` (default Kernel names) or `/dev/disk/by-id/virtio-storage_cluster_disk` (persistent names based on hardware info).
        devicePathFilter: /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_storage_cluster.*
        # Config details found here: https://rook.io/docs/rook/latest-release/CRDs/Cluster/ceph-cluster-crd/#osd-configuration-settings
        config:
          osdsPerDevice: "1"
      # NOTE: This is helpful in scenarios where there will be OSDs correctly inactive in the cluster.
      # A scenario where this might happen is when a Kubernetes node is removed or recreated from scratch and the OSDs are not directly removed from the cluster.
      # When a k8s node is recreated, a new OSD can be created, join the cluster, and be replicated to. But the old one might persist indefinitely.
      removeOSDsIfOutAndSafeToRemove: true
      # To control where various services will be scheduled by kubernetes, use the placement configuration sections below.
      # Only restrict storage-providing components (OSDs, mons, mgrs) to storage nodes
      # Allow CSI components on all nodes so any node can mount Ceph volumes
      placement:
        osd:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: "drmoo.io/storage"
                      operator: In
                      values:
                        - rook-osd-node
        mon:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: drmoo.io/storage
                      operator: In
                      values:
                        - rook-osd-node
        mgr:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: drmoo.io/storage
                      operator: In
                      values:
                        - rook-osd-node
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 2
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: false
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            compression_mode: aggressive
            compression_algorithm: zstd
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: storage
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: storage
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: storage
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 2
          dataPools:
            - failureDomain: host
              replicated:
                size: 2
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 4Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: storage
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: storage
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: storage
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []
