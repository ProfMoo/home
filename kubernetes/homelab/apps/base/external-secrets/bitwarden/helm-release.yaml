---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bitwarden
  namespace: base
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      bitwarden:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/roxedus/bw
              tag: 2024.9.0@sha256:15f242f095775f2ea2b5040d3fafa70ab75ea78cc1ddecd6e874a5801a1b75cd
            envFrom:
              - secretRef:
                  name: bitwarden-apikey
            securityContext:
              readOnlyRootFilesystem: true
            command: ["sh", "-c"]
            args:
              - |
                echo "Starting up bitwarden CLI container"
                echo "Setting Bitwarden server"
                bw config server ${BW_HOST}
                echo "Logging in with APIKey"
                BW_CLIENTID="${BW_CLIENTID}" BW_CLIENTSECRET="${BW_CLIENTSECRET}" bw login --apikey
                echo "Unlocking vault with password"
                export BW_SESSION=$(bw unlock --passwordenv BW_PASSWORD --raw)
                # Ensures the Bitwarden vault is unlocked - fails out otherwise
                bw unlock --check
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      [
                        "sh",
                        "-c",
                        "curl -X POST -s http://127.0.0.1:8087/sync | jq -e '.success == true'",
                      ]
                  timeoutSeconds: 5
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                memory: 256Mi
                cpu: 100m
              limits:
                memory: 512Mi
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8087
    persistence:
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
