---
# NOTE: We need to deploy the secrets separately so that we can `dependOn` them in the betanin kustomization.
# This ensures we don't get a chicken & egg problem where the config needs the secrets, but the secrets won't be substituted until the `postBuild`
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app betanin-secrets
  namespace: flux-system
spec:
  targetNamespace: flux-system
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  path: ./kubernetes/homelab/apps/media/betanin/secrets
  prune: true
  sourceRef:
    kind: GitRepository
    name: profmoo-home
  wait: false
  interval: 30m
  retryInterval: 1m
  timeout: 5m
  decryption:
    provider: sops
    secretRef:
      name: sops-age
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app betanin
  namespace: flux-system
spec:
  targetNamespace: media
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  path: ./kubernetes/homelab/apps/media/betanin/app
  dependsOn:
    - name: betanin-secrets
      namespace: flux-system
  prune: true
  sourceRef:
    kind: GitRepository
    name: profmoo-home
  healthChecks:
    - apiVersion: helm.toolkit.fluxcd.io/v2
      kind: HelmRelease
      name: betanin
      namespace: media
  wait: false
  interval: 30m
  retryInterval: 1m
  timeout: 5m
  postBuild:
    substituteFrom:
      - kind: Secret
        name: betanin-secrets
