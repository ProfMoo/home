---
machine:
  nodeLabels:
    drmoo.io/role: ${node_type}
    drmoo.io/zone: ${proxmox_node}
  certSANs:
    - ${ipv4_address}/24
    - "kubernetes.default.svc.cluster.local"
    - 127.0.0.1
    - ${talos_virtual_ip}
  kubelet:
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
    extraArgs:
      rotate-server-certificates: true
  network:
    hostname: ${hostname}
    nameservers:
      - 8.8.8.8
      - 1.1.1.1
    interfaces:
      - addresses:
          - ${ipv4_address}/24
        routes:
          - network: 0.0.0.0/0
            gateway: ${subnet_gateway}
        vip:
          ip: ${talos_virtual_ip}
        deviceSelector:
          hardwareAddr: '${mac_address}'
  features:
    rbac: true
    stableHostname: true
    apidCheckExtKeyUsage: true
    # https://www.talos.dev/v1.9/talos-guides/network/host-dns/
    hostDNS:
      enabled: true
      resolveMemberNames: true
      forwardKubeDNSToHost: false
    kubePrism:
      enabled: true
      port: 7445
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles:
        - os:admin
      allowedKubernetesNamespaces:
        - system-upgrade
  install:
    # Docs: https://www.talos.dev/v1.9/learn-more/image-factory/
    # Adjust this image to either 1. install new extensions and/or 2. upgrade Talos
    # 1. Go to https://factory.talos.dev/ and generate a new path
    # 2. Pass in a different 'talos_version'
    image: factory.talos.dev/installer/dc7b152cb3ea99b821fcb7340ce7168313ce393d663740b791c36f6e95fc8586:${talos_version}
  files:
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.1
        hard=True
        noatime=True
        nodiratime=True
        rsize=131072
        wsize=131072
        nconnect=8
cluster:
  network:
    podSubnets: ${format("%#v",split(",",pod_subnets))}
    serviceSubnets: ${format("%#v",split(",",service_subnets))}
    cni:
      name: none
  controlPlane:
    endpoint: https://192.168.8.20:6443
  apiServer:
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
  proxy:
    # Using Cilium as the proxy, so disabling kube-proxy
    disabled: true
  etcd:
    extraArgs:
      # NOTE: We need to override the default bind address so that the /metrics endpoint is able to be scraped by Prometheus
      # Further discussion: https://github.com/siderolabs/talos/discussions/7799
      listen-metrics-urls: http://0.0.0.0:2381
  controllerManager:
    extraArgs:
      # NOTE: Kubernetes manifests controlled by Talos require a special application process compared to most machine-config changes.
      # Source: https://github.com/siderolabs/talos/discussions/7835
      bind-address: 0.0.0.0
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        cpu: 1
        memory: 1Gi
  scheduler:
    extraArgs:
      # NOTE: This enables Prometheus to scrape metrics from the control plane nodes
      bind-address: 0.0.0.0
    resources:
      requests:
        cpu: 500m
        memory: 500Mi
      limits:
        cpu: 1
        memory: 1Gi
  inlineManifests:
    - name: fluxcd
      contents: |-
        apiVersion: v1
        kind: Namespace
        metadata:
            name: flux-system
            labels:
              app.kubernetes.io/instance: flux-system
              app.kubernetes.io/part-of: flux
              pod-security.kubernetes.io/warn: restricted
              pod-security.kubernetes.io/warn-version: latest
    - name: cilium
      contents: |-
        apiVersion: v1
        kind: Namespace
        metadata:
            name: cilium
            annotations:
              kustomize.toolkit.fluxcd.io/prune: disabled
            labels:
              pod-security.kubernetes.io/enforce: "privileged"
