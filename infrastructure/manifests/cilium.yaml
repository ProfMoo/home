---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5BbGlrTlFXektUdGdQcE5teFhUTU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJeE16QXlOVEl6TUZvWERUSTNNREl4TWpBeQpOVEl6TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4ZWxwY1JtRGNlQUIyYXR6S2taZis0Yk1CWEhzbXNDbEJMQ2RuaW5WYmdDclNDeG4KbW9MWU9LWjB0b3IwSG5LdTF6L25yR3FCU3BEZVNLRDFNcEFsRFFvQkRkM1krZXFpTkU1UDZoVERCTDMyTS8zNApWRzZzeFNTZFhhS1FjYStBNXptYStydkN4dmVUTnd4cGhJV0gxcGlFQ3FPR3Jic2NPSkVyekEyWmJ5Z29JSnNUCmhpaXlpTVo0TzVua0c5Nkc0UFFIYTZKdVVKYWJJQnZIalp1TzRteFhFd2x4c1J5WVphOVBsMU4reFVMM0xjMDIKZkpZNkhydEVJQWxYVkdyR2lybG9YekVueUxlamN2SCtMVWNJcUlXYzZoMWhjODZINFRiT2VOMzk5Ull1WGZQagpPSndSUFBXd2tVaE9ubzJZaVJ4YmwzeTZzbDNqTWw0MmowQTcvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQnhVb0w4aStpRkZrMUt2cTlwRFFZbmlMa1pkTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3dXZzBBT1JWWTRscjJQYnNvWC8zTjRMVWVJc1RlSWVyK2N0a1pvWWEvUlRPeFhUNHN6dkQvCklkM1NTa1VPS29SSmQ3YWczWk9UK1BFWjY2Y0lsRVJwMFQrdHRFcC90SEFrVy9tUE1NS0phSVhzMnpzVFpIUXIKMXBWR0Fwam5GNmwwQnBXUnB2MWZqMC9MR2kwd1VzcE9wWi9WZkJITi9EZ2paZk1qNkFTWkxUeTZBWjNITGxBZQp1bHJwQmIwQkhBTVV1RkhEakdoWTBITXdjbUdrRkFJZWtCY2VrLzgvS1RvcllXT1NpK3JJOUdkV3dpQ1ZVeDdmCkZzTEdBWDdpeVR0MHJOcTZDYm1sdnMxT1dLQ2F3MGRiWGp2SC9XOGJjUGcxMk9NTXNDSEJFbkoyRHh1QXRqRWkKYXc3U3JWZDlvL3lDeTBuYnNXeW5EaEYvcHdNcVZZTE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeGVscGNSbURjZUFCMmF0ektrWmYrNGJNQlhIc21zQ2xCTENkbmluVmJnQ3JTQ3huCm1vTFlPS1owdG9yMEhuS3Uxei9uckdxQlNwRGVTS0QxTXBBbERRb0JEZDNZK2VxaU5FNVA2aFREQkwzMk0vMzQKVkc2c3hTU2RYYUtRY2ErQTV6bWErcnZDeHZlVE53eHBoSVdIMXBpRUNxT0dyYnNjT0pFcnpBMlpieWdvSUpzVApoaWl5aU1aNE81bmtHOTZHNFBRSGE2SnVVSmFiSUJ2SGpadU80bXhYRXdseHNSeVlaYTlQbDFOK3hVTDNMYzAyCmZKWTZIcnRFSUFsWFZHckdpcmxvWHpFbnlMZWpjdkgrTFVjSXFJV2M2aDFoYzg2SDRUYk9lTjM5OVJZdVhmUGoKT0p3UlBQV3drVWhPbm8yWWlSeGJsM3k2c2wzak1sNDJqMEE3L3dJREFRQUJBb0lCQUdSM29neEZER0loZWk3NgpoeUw5eUxuUjZ2NFVvQ3pMQUxwSndpbkpTTXhuMEl0NTV6b2JsQkhtQmplb2dGWjRsMk16MExMSStrdFZFVkpEClMxWFlzTVpXdnNSQVMyWkxBdjZVaHFMbzJUc3VCNjdMRFdZbkxOT0RTOU45czkvU1hSaUVPTFZ4M1dYTnhsRGEKbnpJajZ4bzRJRWVhVGNNaHlpaTVJVWViMjdqOS8vbWlUYmhqaXhIV1VSRTRLMVhBU29Mem1aRFZOcWhDdGQ4UQo1bVNPNTFUTno1TVY0U2VNTmJhWFpvWGc1OVlUNlp1RHFLSS9ERm9uOU9JKzYwa1BPanRhRC85Mlk0cDNQK000CnorTHZDRGRLZ1RzM2hKdkpQSU8rY0pGVUFkRHZIUkJZRSt5L2phaVNDTDVuU3RQQlZRcFhNbFRhWGJKREU2YkoKam5ETk8ra0NnWUVBMlAvZGJVNkpHazRwNTMrbjFBNWVPdlJNRGpKbGJ5NGtTOHdvVm42SVVNdldYWXBaeklWZQo1THplNVN5d2Y5d1FXKzcvdlU2Y3NzSW8yRDErUDYwRy9teTdINXU5aG84cGloTkhBOC9ITHB0cnZwcWNReDgyCmgvZ1luampoRzZna2F0SUFiV1hUcWllblZyanE0VXI5anQrTXlrNVJ4dXI3L0hEWWxGN0pUdk1DZ1lFQTZYdFMKakxRWjJzZGUybmhFZkZYVjdFQ2pDM3JxWDR3aDZiNEN4aUV2d3JBcWtTMWFPUW9la2YwQXExSUthTGNiSzVycQpaNlRORWl6V29zOHBXU3NCbWRJSytHanBQT1NOT2hTMCt2K0gwSldDZzZ6UVpsNEhZVnU5bzRjKzArZHBUNks0CkQ4YU5VWWRzVGZueDY2Y0ZFQWRNTTUyeXMxcExWVU5EWnZlTVdjVUNnWUF6RVN2TDhJS0ZaVVdwVERwenhoblkKNStzS0lFUU13U0Fia21VZnpkRklxbCs5VGJUS1U4eThLZEtPdmxDZkZtdm5Kcnlha1dpQkRQNU52Vkw3cXoyTgpISXVBNmNiVlp0V1F2KzZqYi85ZzhZU09xNVlBbWRUY2RMOWVaT1pjK3RudkpaS2lMQ2QrMEt3cDFZUzVGa3ZMCmxzSnNUYmdqQnVQY1NiWStYSHdsandLQmdDZ0V4RHhycmpiS2oxNkEyTFE2L2lTMVczemZQNGJLL1JFVVNXTnUKVXNKYThhRGFsaWxLcTd5NEVjSkxtSThrTzFyNC9ZNXdOOW9TcDJOV2dLN1E2VUJWT1I0azFUMWpxelUyVVdMbwpJMzVEOGcvaHNnS3B3VGdWd21aaUN3bkZFMDdjQkJKb0pOYkJrSFc1RHBjbWxINlAwYWJUTThyOEFnZUdOT3BVCktkRkZBb0dBUkRsWHVoWFMweGVCWVVTTG9tRGhZMXpkNFBFYzFJckFCdzNZSjY1VXZuNHFwTlZTb28rNXJMN2EKNUNOd0hZc2l1amIwNm8raCtCOUlVYVRJU2Y1L2dNaUdXcEdJMkVsZTBIL3RNZnErZlU4VktDTWFsbUk2aTlJRwp5YllseEVrS0RMZkJpV0lQa1lXVWM0QkJtaGtRcTNLZS9IREdJUk45U1FzK3d6Z3FEUWc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5BbGlrTlFXektUdGdQcE5teFhUTU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJeE16QXlOVEl6TUZvWERUSTNNREl4TWpBeQpOVEl6TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4ZWxwY1JtRGNlQUIyYXR6S2taZis0Yk1CWEhzbXNDbEJMQ2RuaW5WYmdDclNDeG4KbW9MWU9LWjB0b3IwSG5LdTF6L25yR3FCU3BEZVNLRDFNcEFsRFFvQkRkM1krZXFpTkU1UDZoVERCTDMyTS8zNApWRzZzeFNTZFhhS1FjYStBNXptYStydkN4dmVUTnd4cGhJV0gxcGlFQ3FPR3Jic2NPSkVyekEyWmJ5Z29JSnNUCmhpaXlpTVo0TzVua0c5Nkc0UFFIYTZKdVVKYWJJQnZIalp1TzRteFhFd2x4c1J5WVphOVBsMU4reFVMM0xjMDIKZkpZNkhydEVJQWxYVkdyR2lybG9YekVueUxlamN2SCtMVWNJcUlXYzZoMWhjODZINFRiT2VOMzk5Ull1WGZQagpPSndSUFBXd2tVaE9ubzJZaVJ4YmwzeTZzbDNqTWw0MmowQTcvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQnhVb0w4aStpRkZrMUt2cTlwRFFZbmlMa1pkTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3dXZzBBT1JWWTRscjJQYnNvWC8zTjRMVWVJc1RlSWVyK2N0a1pvWWEvUlRPeFhUNHN6dkQvCklkM1NTa1VPS29SSmQ3YWczWk9UK1BFWjY2Y0lsRVJwMFQrdHRFcC90SEFrVy9tUE1NS0phSVhzMnpzVFpIUXIKMXBWR0Fwam5GNmwwQnBXUnB2MWZqMC9MR2kwd1VzcE9wWi9WZkJITi9EZ2paZk1qNkFTWkxUeTZBWjNITGxBZQp1bHJwQmIwQkhBTVV1RkhEakdoWTBITXdjbUdrRkFJZWtCY2VrLzgvS1RvcllXT1NpK3JJOUdkV3dpQ1ZVeDdmCkZzTEdBWDdpeVR0MHJOcTZDYm1sdnMxT1dLQ2F3MGRiWGp2SC9XOGJjUGcxMk9NTXNDSEJFbkoyRHh1QXRqRWkKYXc3U3JWZDlvL3lDeTBuYnNXeW5EaEYvcHdNcVZZTE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeGVscGNSbURjZUFCMmF0ektrWmYrNGJNQlhIc21zQ2xCTENkbmluVmJnQ3JTQ3huCm1vTFlPS1owdG9yMEhuS3Uxei9uckdxQlNwRGVTS0QxTXBBbERRb0JEZDNZK2VxaU5FNVA2aFREQkwzMk0vMzQKVkc2c3hTU2RYYUtRY2ErQTV6bWErcnZDeHZlVE53eHBoSVdIMXBpRUNxT0dyYnNjT0pFcnpBMlpieWdvSUpzVApoaWl5aU1aNE81bmtHOTZHNFBRSGE2SnVVSmFiSUJ2SGpadU80bXhYRXdseHNSeVlaYTlQbDFOK3hVTDNMYzAyCmZKWTZIcnRFSUFsWFZHckdpcmxvWHpFbnlMZWpjdkgrTFVjSXFJV2M2aDFoYzg2SDRUYk9lTjM5OVJZdVhmUGoKT0p3UlBQV3drVWhPbm8yWWlSeGJsM3k2c2wzak1sNDJqMEE3L3dJREFRQUJBb0lCQUdSM29neEZER0loZWk3NgpoeUw5eUxuUjZ2NFVvQ3pMQUxwSndpbkpTTXhuMEl0NTV6b2JsQkhtQmplb2dGWjRsMk16MExMSStrdFZFVkpEClMxWFlzTVpXdnNSQVMyWkxBdjZVaHFMbzJUc3VCNjdMRFdZbkxOT0RTOU45czkvU1hSaUVPTFZ4M1dYTnhsRGEKbnpJajZ4bzRJRWVhVGNNaHlpaTVJVWViMjdqOS8vbWlUYmhqaXhIV1VSRTRLMVhBU29Mem1aRFZOcWhDdGQ4UQo1bVNPNTFUTno1TVY0U2VNTmJhWFpvWGc1OVlUNlp1RHFLSS9ERm9uOU9JKzYwa1BPanRhRC85Mlk0cDNQK000CnorTHZDRGRLZ1RzM2hKdkpQSU8rY0pGVUFkRHZIUkJZRSt5L2phaVNDTDVuU3RQQlZRcFhNbFRhWGJKREU2YkoKam5ETk8ra0NnWUVBMlAvZGJVNkpHazRwNTMrbjFBNWVPdlJNRGpKbGJ5NGtTOHdvVm42SVVNdldYWXBaeklWZQo1THplNVN5d2Y5d1FXKzcvdlU2Y3NzSW8yRDErUDYwRy9teTdINXU5aG84cGloTkhBOC9ITHB0cnZwcWNReDgyCmgvZ1luampoRzZna2F0SUFiV1hUcWllblZyanE0VXI5anQrTXlrNVJ4dXI3L0hEWWxGN0pUdk1DZ1lFQTZYdFMKakxRWjJzZGUybmhFZkZYVjdFQ2pDM3JxWDR3aDZiNEN4aUV2d3JBcWtTMWFPUW9la2YwQXExSUthTGNiSzVycQpaNlRORWl6V29zOHBXU3NCbWRJSytHanBQT1NOT2hTMCt2K0gwSldDZzZ6UVpsNEhZVnU5bzRjKzArZHBUNks0CkQ4YU5VWWRzVGZueDY2Y0ZFQWRNTTUyeXMxcExWVU5EWnZlTVdjVUNnWUF6RVN2TDhJS0ZaVVdwVERwenhoblkKNStzS0lFUU13U0Fia21VZnpkRklxbCs5VGJUS1U4eThLZEtPdmxDZkZtdm5Kcnlha1dpQkRQNU52Vkw3cXoyTgpISXVBNmNiVlp0V1F2KzZqYi85ZzhZU09xNVlBbWRUY2RMOWVaT1pjK3RudkpaS2lMQ2QrMEt3cDFZUzVGa3ZMCmxzSnNUYmdqQnVQY1NiWStYSHdsandLQmdDZ0V4RHhycmpiS2oxNkEyTFE2L2lTMVczemZQNGJLL1JFVVNXTnUKVXNKYThhRGFsaWxLcTd5NEVjSkxtSThrTzFyNC9ZNXdOOW9TcDJOV2dLN1E2VUJWT1I0azFUMWpxelUyVVdMbwpJMzVEOGcvaHNnS3B3VGdWd21aaUN3bkZFMDdjQkJKb0pOYkJrSFc1RHBjbWxINlAwYWJUTThyOEFnZUdOT3BVCktkRkZBb0dBUkRsWHVoWFMweGVCWVVTTG9tRGhZMXpkNFBFYzFJckFCdzNZSjY1VXZuNHFwTlZTb28rNXJMN2EKNUNOd0hZc2l1amIwNm8raCtCOUlVYVRJU2Y1L2dNaUdXcEdJMkVsZTBIL3RNZnErZlU4VktDTWFsbUk2aTlJRwp5YllseEVrS0RMZkJpV0lQa1lXVWM0QkJtaGtRcTNLZS9IREdJUk45U1FzK3d6Z3FEUWc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5BbGlrTlFXektUdGdQcE5teFhUTU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJeE16QXlOVEl6TUZvWERUSTNNREl4TWpBeQpOVEl6TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4ZWxwY1JtRGNlQUIyYXR6S2taZis0Yk1CWEhzbXNDbEJMQ2RuaW5WYmdDclNDeG4KbW9MWU9LWjB0b3IwSG5LdTF6L25yR3FCU3BEZVNLRDFNcEFsRFFvQkRkM1krZXFpTkU1UDZoVERCTDMyTS8zNApWRzZzeFNTZFhhS1FjYStBNXptYStydkN4dmVUTnd4cGhJV0gxcGlFQ3FPR3Jic2NPSkVyekEyWmJ5Z29JSnNUCmhpaXlpTVo0TzVua0c5Nkc0UFFIYTZKdVVKYWJJQnZIalp1TzRteFhFd2x4c1J5WVphOVBsMU4reFVMM0xjMDIKZkpZNkhydEVJQWxYVkdyR2lybG9YekVueUxlamN2SCtMVWNJcUlXYzZoMWhjODZINFRiT2VOMzk5Ull1WGZQagpPSndSUFBXd2tVaE9ubzJZaVJ4YmwzeTZzbDNqTWw0MmowQTcvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQnhVb0w4aStpRkZrMUt2cTlwRFFZbmlMa1pkTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3dXZzBBT1JWWTRscjJQYnNvWC8zTjRMVWVJc1RlSWVyK2N0a1pvWWEvUlRPeFhUNHN6dkQvCklkM1NTa1VPS29SSmQ3YWczWk9UK1BFWjY2Y0lsRVJwMFQrdHRFcC90SEFrVy9tUE1NS0phSVhzMnpzVFpIUXIKMXBWR0Fwam5GNmwwQnBXUnB2MWZqMC9MR2kwd1VzcE9wWi9WZkJITi9EZ2paZk1qNkFTWkxUeTZBWjNITGxBZQp1bHJwQmIwQkhBTVV1RkhEakdoWTBITXdjbUdrRkFJZWtCY2VrLzgvS1RvcllXT1NpK3JJOUdkV3dpQ1ZVeDdmCkZzTEdBWDdpeVR0MHJOcTZDYm1sdnMxT1dLQ2F3MGRiWGp2SC9XOGJjUGcxMk9NTXNDSEJFbkoyRHh1QXRqRWkKYXc3U3JWZDlvL3lDeTBuYnNXeW5EaEYvcHdNcVZZTE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQnFSaWphVEg3M2RQdzhiMzNGcUJVREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpFek1ESTFNak13V2hjTk1qY3dNakV5TURJMQpNak13V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFERzNkTlBiNFpKL1N2bkJnM0RDd1dVNU1GanNCa24KU3Q3YzhRb3lCV3dRbGpoQ0oyK2R0UTY5S2hTd3pjL2trTXFDNldScW1kSHhqZWovODU1NklFcDBxcDVtQXFocApleFl1SExra2J3MC9KaEJPcWNGYVVOZkJ3T1dpOHhUTUJvN2FvTGVFbGNSaTkvWDBObCt0Q0Jkbjh5WWtXYVlhCnBnYWQzdlVXZmE2OVZ0azhOMUlUUFViK1BuVGFXY3lWOU94V3B5MWtCSEFlNUUybkF4R2wxcUU5MkZZZTBwZ1YKVC9QRHpXR2g5cmM3MXVQaVU3bkU1dTBudlV3M0VJK05uSllzaGRNcUhRWVZSODZkN05XLzhURTF2S1ZXdldoOQo1STlLWXBwUTNKUXd3UDFNdzZrNEVmQWg3eXA5NThrYkJpKzZvZEU2blhNeFptdmRoc0Z0MkZ6UEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZCeFVvTDhpK2lGRmsxS3ZxOXBEUVluaQpMa1pkTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFCcVpITm82U0FSRTB1Tzg4cnhzTXVLZEN1VnhQWERuTThlaXNxK3lzV0o2SW5TcDAKTEVDMlJkYkszaklMUkJYWXR4dkk4R1lQTVpvamR0NkQ4M1B1MGFkYlc3YWFCN29xR2o3RFBsRVJaK2NDQjlaNwpPNVVMNkJjRXY5cHRGZXVhclk1UDgwcDhRUzYrUE5LdlFUUDZXRzRGeGQrUFRJbU5kTi9ySlBLazUxZ2RHN1dDCkQ0bTROcktxVDZ1RmxLNzFkSzdCWDV5K1pBYmlqZS9xU1JlVUxQMGpHSEZTOS9SOGN2ZFJ0U21Cays4a3VYbHoKT2h6NlFHRm1ob2ZxZml3bzgweTZNWHVJK2dZR1dzWi9Xa1oxcHFRTUQxTTRWVkVSSWRYcTN0R1d4ZnhpdGNmSgo3NUV2NHNkSXdILzluVFAySXBxMTgvaE9JcU93SmorTldGNkY0Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHQzVFQyK0dTZjByNXdZTnd3c0ZsT1RCWTdBWkowcmUzUEVLTWdWc0VKWTRRaWR2Cm5iVU92U29Vc00zUDVKREtndWxrYXBuUjhZM28vL09lZWlCS2RLcWVaZ0tvYVhzV0xoeTVKRzhOUHlZUVRxbkIKV2xEWHdjRGxvdk1VekFhTzJxQzNoSlhFWXZmMTlEWmZyUWdYWi9NbUpGbW1HcVlHbmQ3MUZuMnV2VmJaUERkUwpFejFHL2o1MDJsbk1sZlRzVnFjdFpBUndIdVJOcHdNUnBkYWhQZGhXSHRLWUZVL3p3ODFob2ZhM085Ymo0bE81CnhPYnRKNzFNTnhDUGpaeVdMSVhUS2gwR0ZVZk9uZXpWdi9FeE5ieWxWcjFvZmVTUFNtS2FVTnlVTU1EOVRNT3AKT0JId0llOHFmZWZKR3dZdnVxSFJPcDF6TVdacjNZYkJiZGhjendJREFRQUJBb0lCQVFDTkh4OTBNSFZBaml1WQpmd0JIRjh3M00vcFVyc082MFhQRG9EMlc3NmdYUVRMZEp6VWEya0NDVnBsbU9qYzhRTStsQk5EZ29SV044Q0dYCmVKOU9sUm1oSHU3Vy95M1o1S0lCeVJwTlU0MDM4ZUFDb281MmRBWVlGYllmNDVZdmpydlRROWZYZTV4b2l3UDcKOEpZR3FVWksydzZISHlNenAvdnNEaXNvY2JvTjI1SkVaRkxBSjJ0M3VRNmViNFExcnFDSG52Y1VQOGpZVkp4NAoweXQ2WmlocGdrSlRCemFNcjZFcXkwbnRLVXhoSG95d01uVnpGNHRHTXZUNTJPQ3JwODltYkdaZGJwYkcxakNpCmNZekk1anpOOFpjV1JQUTk5SStrRExkaDE2QmR4S0g0TFpkUjNWakhCY3I3d3dQbGkvN29TWWEyY3RmUFNDNkcKdGxDWTVQeXBBb0dCQU9xZGIvc3E3ZVFaMnhLbkc4bEdKQ0QvcDl4YVFGMWRsa3czZ2hqMXk2dE12dkhiQW04Rgo5Vk0wazdQS0FmdDA5T1JNekZsYk9vQ2hrUFpsUnhvblA3V0tpdzJVaU1UdzhNUHdLT2t1OWRXc0RObDF1TGlCCk1yeEozcTAycmp3RjVhbTdLaldGWStERkhVOW1YRXlSRUlacGpDd3JSdkZkU2JsM1BCWXEvaG5OQW9HQkFOaisKT1dvNXpkS0VvTkxQT3JlNDVJOVprNFJqam8xUmw4aTk2RE81Nzcza0RMb0RYbEZTSDRsamRNV2RnSUNETzNocApDazNocHBONXgvc1pvS3JEZFdUNHhzRkgyWUx6dFI5ekR1MkVJbFkvT1huWjJlWFZSRUlvVVJiY3VRT0p6MmtaCkczZDBmek9tNnppREdTWGNkOGFBRXhHU09qMW9CbHhJRVN3YTNVVUxBb0dBUnh4aERLZitZdHpUWWR2MHVCVGkKYm40T3l1TXdEeHlHcWFOSmMzZE12Q2NPMlErZ3RUWUJIYThaOWF5TTNVS2QxM1RQbTJYalhZbWEvcFBEOFZGawpKZ3BRQzFXeC9yOW91bnJZYTVVb1BoTmY4YW1VeTVlZFlTU2lzYTJaTWVnM3JESm1vTUpGZTZORE53VzNoQjJUCi9LbVJLdklURnFWSDYwY1FsMGVBclNFQ2dZRUFtQ3h4QjFYU1NiaEpNSTJ6bC9SS0ZWMjBYanVUVlBmTGdqUHMKQzVweHpyR0hXMHZSY1NZdWg2TC8yVFpEVDl5NGNCRDU4UFEyWldZYUlMWXdQcEVrV3RNOFQzK2J3b0kybXYrTgprSFFCd0lwR1BIWFNvYU9XWXU3ekx4MUxnbmU2eFBHZW1YOVJWVi9SeGFmcWt1cXg5THNNcEYzd0NmQlJ4WldrCnRWR0JxMUVDZ1lCUjNsWWVYMk9CNUZQcW4xNXdkRytVMDNFTm5lM1JPOURzTzllYWNWdHgrSSt0NTYyaEFpNUoKVUphUkIwSndiT1pVVmNOV2hyUVBzUHVMN2hZZ3BOOGFsUE44TzNHc2FDeVJlRlFTTzJJS2UrbmRVelFrVE1TegpKTjBqaFl0Nmd0cktudGhPQ1l4WkJaTlA3MFQ4RTVTUkJTN3prT3pMbE9WUDhtSkdzem9lSWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5BbGlrTlFXektUdGdQcE5teFhUTU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJeE16QXlOVEl6TUZvWERUSTNNREl4TWpBeQpOVEl6TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4ZWxwY1JtRGNlQUIyYXR6S2taZis0Yk1CWEhzbXNDbEJMQ2RuaW5WYmdDclNDeG4KbW9MWU9LWjB0b3IwSG5LdTF6L25yR3FCU3BEZVNLRDFNcEFsRFFvQkRkM1krZXFpTkU1UDZoVERCTDMyTS8zNApWRzZzeFNTZFhhS1FjYStBNXptYStydkN4dmVUTnd4cGhJV0gxcGlFQ3FPR3Jic2NPSkVyekEyWmJ5Z29JSnNUCmhpaXlpTVo0TzVua0c5Nkc0UFFIYTZKdVVKYWJJQnZIalp1TzRteFhFd2x4c1J5WVphOVBsMU4reFVMM0xjMDIKZkpZNkhydEVJQWxYVkdyR2lybG9YekVueUxlamN2SCtMVWNJcUlXYzZoMWhjODZINFRiT2VOMzk5Ull1WGZQagpPSndSUFBXd2tVaE9ubzJZaVJ4YmwzeTZzbDNqTWw0MmowQTcvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQnhVb0w4aStpRkZrMUt2cTlwRFFZbmlMa1pkTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3dXZzBBT1JWWTRscjJQYnNvWC8zTjRMVWVJc1RlSWVyK2N0a1pvWWEvUlRPeFhUNHN6dkQvCklkM1NTa1VPS29SSmQ3YWczWk9UK1BFWjY2Y0lsRVJwMFQrdHRFcC90SEFrVy9tUE1NS0phSVhzMnpzVFpIUXIKMXBWR0Fwam5GNmwwQnBXUnB2MWZqMC9MR2kwd1VzcE9wWi9WZkJITi9EZ2paZk1qNkFTWkxUeTZBWjNITGxBZQp1bHJwQmIwQkhBTVV1RkhEakdoWTBITXdjbUdrRkFJZWtCY2VrLzgvS1RvcllXT1NpK3JJOUdkV3dpQ1ZVeDdmCkZzTEdBWDdpeVR0MHJOcTZDYm1sdnMxT1dLQ2F3MGRiWGp2SC9XOGJjUGcxMk9NTXNDSEJFbkoyRHh1QXRqRWkKYXc3U3JWZDlvL3lDeTBuYnNXeW5EaEYvcHdNcVZZTE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU1CclpjR0tacFI4YUpBVG9hKzdXRm93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJeE16QXlOVEl6TUZvWERUSTNNREl4TWpBeQpOVEl6TUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU8wSGJneE5OUjV2Qk93SnhOT24KbTl5UFdjcmNrTlpmT3g4dWtoZnVSQUxyMjloNGxxb3VqUVNXclF1NDRBMmE2THc3UUl2bU42dXVzQUlRMmx6agp6UE42OUdUS2R0a3dmVXdlZmhmSlJQTGV3cmlBaDZHRUpOdGhDYmhaQWliV1JpNVBOSW9uNm96SVpQNVRtY0FUCnVCci9nbnUvWkpLSGlrM1F4Nlo3dHgrc0hSSjA0OVBBZjE3RzFYMUJHN2JjdTVZSzNFUnQ5Tmt0UTl5dWpKOGYKcG5OcGdQYkg1OGI3K0Vpa3FSUUZxUWJIWHdJVFJrR1dCNWh0TzNKMW5JQnlMUkpaZmRWRk01em5wNmh3ZE9mNQpsc3RHckl1aHFIR25DaTZYSnNPbGl2RVpRQzJxUXlCVDBXZTNGSG9XaytXZmQvNnU2cENON0lYdHllaGVxWVNtCjR3a0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUhGU2d2eUw2SVVXVApVcStyMmtOQmllSXVSbDB3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWxveUx6K2tXYUtVb0s2MjBxRlBScGxhUzFRTHMKeGY4TnRSeUExNy9FQzlyYTQyR2Z3OHl2T05uN09EbXhUbktkWmxaR1JoWWdsdHBMTXcydHNwbmVVQzdYdG1CRgpxM09oNklSSEZKY1B1ZlRqYjFRWTV4UDFKcktjNldvUEdiTEJZUFRuSE04QjR5R3FULzd4MnpQOTJ5OVUzU2pRCmZWanpmUCtKbjMvVzFNMEI0UEd4aFNLTnFqb3oyQ1o0TEtwTW1LYzZydTZ2MVc5T1d4VnpXQUl5OE5SZGJ6U3UKVGc1WTl3TnFrbENRMEthR0M3MUlHbHRid0N3OS9LMThnSGtNMTNyeWFEelRTS0ppaWtBMmNhbTZWaVpsNnJHTQpRQmJZNnROUHJtV1lwWUtxRWpFSFJqLzQ4Tnl5c0toNEJ0eXo0YjJlalhuakd3NmVnbVJmRG1LanlnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBN1FkdURFMDFIbThFN0FuRTA2ZWIzSTlaeXR5UTFsODdIeTZTRis1RUF1dmIySGlXCnFpNk5CSmF0QzdqZ0Racm92RHRBaStZM3E2NndBaERhWE9QTTgzcjBaTXAyMlRCOVRCNStGOGxFOHQ3Q3VJQ0gKb1lRazIyRUp1RmtDSnRaR0xrODBpaWZxak1oay9sT1p3Qk80R3YrQ2U3OWtrb2VLVGRESHBudTNINndkRW5UagowOEIvWHNiVmZVRWJ0dHk3bGdyY1JHMzAyUzFEM0s2TW54K21jMm1BOXNmbnh2djRTS1NwRkFXcEJzZGZBaE5HClFaWUhtRzA3Y25XY2dISXRFbGw5MVVVem5PZW5xSEIwNS9tV3kwYXNpNkdvY2FjS0xwY213NldLOFJsQUxhcEQKSUZQUlo3Y1VlaGFUNVo5My9xN3FrSTNzaGUzSjZGNnBoS2JqQ1FJREFRQUJBb0lCQUJBdVk2cmZVbk1EYlRpWAo2aUh3M1VrUFdEZnJHdEFuckNlU3pGSnA1NmF6WjB5OTNyczdkbEVMNEVCZW5KMFJLRFpCYlVTZnNNazlvYkppCmFDWFRQMWlYMmp0UFB4SFFwNTBjcjhyNzZJTVVCZ01HY3p2cGc0S2VlMFZrZmlzY2thbnpxa2lNTlF6cldVbXIKZDJHUGR4QVF4VjJoVVVKWGttK0Jneit3VG00UTlqeXJER2l4bFFFY2R4aUtnWitISjdCZGZPekwxbkwwM2dhbwpWbERNb21MZkN6LzgrMFE5UjYwUnM3OXRPd2hNV3FGRFpKYnE5ZWIvVmhBeGpvMmk3SS8vMHZxVGoxZ2tKY1BnCmg0MUY1Wllpc21RV2QyMGNqMXlUWForOWhlWUZ4bGNaZUJoeUpoYll2am1JTWYyZ0d2SHJYNDRCeHp5NkZ0akgKWHEzWTFnRUNnWUVBL2xCOGcwNnh0akxHek9nRE12Tk5RbEpLTnZrOXpzRVVlam5CNHVsbVcweHdmYVdDZWlBSwpCWjZPcVhFVUtXclhYN2JiNHREemcrYnhpckh6QmRoMVB4R3JZRElsZEl1YnVtVFBvam5RZ1EzemhlZG5wUEpICjhxcXRMc2EwWWN0TC9VMDJnOVAzd3pHUkNXUkJNajdTTTNqa2ZYZVd0bHVpWEhBUkd3U3U5cWtDZ1lFQTdwbWQKT05MOXdHOVNFdzNFMHNvblE3d1RNbUYxeFZrRjJWZDlCM3diVE1oZFFTdCtPNUtMTDhFOCtieEs5cWNTdTh2MQpldUhYT1U5ejJRKzVQMktxK3VHbElqRWNxVG9RNGJSVmNMdGFQcGVvZmdjcTBqTFFCQnd3eTRXKzFBZnpzU1ZhCjljYXVUbmdoM0xqRlJkcG9oMXFEdTZOY1RmQ0tuMURQSWZFdEpXRUNnWUF6eWV3eFNUdERZVCsreHBpd0xYL1UKTzdIRlZDaFVERm5CTWpYYm9iQW9jMzZNOThHRVlUWHBRd3JHVXJMS1pHbUxvazlROTBBLzRpM2FFcmJzdjlIUQprQ2FZSmw0ZVI3ZmswMWE5TUl6WFd5SDJhTk5nY2I1WkdveTk4OVVUL1RSeVZ1RDlJNU5XK3FjUWhJd0tVV1M0CitxdDlLWGRWbDMrTzEzdUVSd1hpVVFLQmdFRHVodzNPeFlXWUJlTHZqVSs3K2VHQ0RrdFlvSDg3VWM4cTh2aVYKZXF4em5vVTh1OWFrYzhKa09SN1JjaWtib0lxQTMrWTREYVVvRFNQV0ZwaThWa0YrSkwxZ1ZpZHJpT3FUYytrQQo0M2RET0hSTHFRaVpFV2o4N3Y2RUFFR2RoR0VDQkhYOFFyVlNGZzBHTDVGcDlhWllLSjlvdnBiclRoNDdGSk50CkdkY2hBb0dBVUQxaUZwNXc5QnlBSm56L1JjVlFnRlltQ1JEUGZpWGJYSlFKOHR5ckpRUmZqQXE2ZmZYTmpZZ0oKUXVUVFdIenNhWjJlYkgzcGNUWjNIVUFtUENSQVFVQlhvL3dzdGFuRkhvcGdBNHAwVk1yWCsxZHUrRHQ5SmY1SgpJekJaMEliUGRQakxpWnhRR25KMEdyR3hkNjlURnZncG4zcllVd3VueVY0MzhYWGRDb289Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
data:
  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"

  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "true"
  ipv4-native-routing-cidr: 10.244.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.cilium.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: cilium
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      # This is used when validating policies in preflight. This will need to stay
      # until we figure out how to avoid "get" inside the preflight, and then
      # should be removed ideally.
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    # To synchronize garbage collection of such resources
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      # to automatically delete [core|kube]dns pods so that are starting to being
      # managed by Cilium
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # To remove node taints
      - nodes
      # To set NetworkUnavailable false on startup
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform LB IP allocation for BGP
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      # to check apiserver connectivity
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform the translation of a CNP that contains `ToGroup` to its endpoints
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
      - create
      - update
      - deletecollection
      # To update the status of the CNPs and CCNPs
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      # Update the auto-generated CNPs and CCNPs status.
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      # To perform garbage collection of such resources
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      # To synchronize garbage collection of such resources
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
        # To perform CiliumNode garbage collector
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  # For cilium-operator running in HA mode.
  #
  # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
  # between multiple running instances.
  # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
  # common and fewer objects in the cluster watch "all Leases".
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: cilium
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: cilium
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: "hubble-ui"
    namespace: cilium
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: cilium
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9e4969dee000741ba3274b45426a9e60a7b6632e96f5959316ce63eb189307d4"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: cilium-agent
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          command:
            - cilium-agent
          args:
            - --config-dir=/tmp/cilium/config-map
          startupProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            failureThreshold: 105
            periodSeconds: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: cni-chaining-mode
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: custom-cni-conf
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.8.99"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          lifecycle:
            postStart:
              exec:
                command:
                  - "bash"
                  - "-c"
                  - |
                    /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          securityContext:
            seLinuxOptions:
              level: s0
              type: spc_t
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            # Unprivileged containers need to mount /proc/sys/net from the host
            # to have write access
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            # Unprivileged containers need to mount /proc/sys/kernel from the host
            # to have write access
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Unprivileged containers can't set mount propagation to bidirectional
              # in this case we will mount the bpf fs from an init container that
              # is privileged and set the mount propagation from host to container
              # in Cilium.
              mountPropagation: HostToContainer
            # Check for duplicate mounts before mounting
            - name: cilium-cgroup
              mountPath: /sys/fs/cgroup
            - name: cilium-run
              mountPath: /var/run/cilium
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
            - name: clustermesh-secrets
              mountPath: /var/lib/cilium/clustermesh
              readOnly: true
              # Needed to be able to load kernel modules
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: xtables-lock
              mountPath: /run/xtables.lock
            - name: hubble-tls
              mountPath: /var/lib/cilium/tls/hubble
              readOnly: true
            - name: tmp
              mountPath: /tmp
      initContainers:
        - name: config
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.8.99"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          terminationMessagePolicy: FallbackToLogsOnError
        # Mount the bpf fs if it is not mounted. We will perform this task
        # from a privileged container because the mount propagation bidirectional
        # only works from privileged containers.
        - name: mount-bpf-fs
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          args:
            - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
          command:
            - /bin/bash
            - -c
            - --
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
        - name: clean-cilium-state
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-state
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-bpf-state
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.8.99"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            seLinuxOptions:
              level: s0
              type: spc_t
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Required to mount cgroup filesystem from the host to cilium agent pod
            - name: cilium-cgroup
              mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
          resources:
            requests:
              cpu: 100m
              memory: 100Mi # wait-for-kube-proxy
        # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
        - name: install-cni-binaries
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          command:
            - "/install-plugin.sh"
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            seLinuxOptions:
              level: s0
              type: spc_t
            capabilities:
              drop:
                - ALL
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: cni-path
              mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
        - name: tmp
          emptyDir: {}
          # To keep state between restarts / upgrades
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          # To keep state between restarts / upgrades for bpf maps
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        # To keep state between restarts / upgrades for cgroup2 filesystem
        - name: cilium-cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
        # To install cilium cni plugin in the host
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          # To install cilium cni configuration in the host
        - name: etc-cni-netd
          hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          # To be able to load kernel modules
        - name: lib-modules
          hostPath:
            path: /lib/modules
          # To access iptables concurrently with other processes (e.g. kube-proxy)
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          # To read the clustermesh configuration
        - name: clustermesh-secrets
          secret:
            secretName: cilium-clustermesh
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            optional: true
        - name: host-proc-sys-net
          hostPath:
            path: /proc/sys/net
            type: Directory
        - name: host-proc-sys-kernel
          hostPath:
            path: /proc/sys/kernel
            type: Directory
        - name: hubble-tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-server-certs
                  optional: true
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: cilium
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9e4969dee000741ba3274b45426a9e60a7b6632e96f5959316ce63eb189307d4"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
        - name: cilium-operator
          image: "quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab"
          imagePullPolicy: IfNotPresent
          command:
            - cilium-operator-generic
          args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.8.99"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
            - name: config
              mountPath: /etc/hubble-relay
              readOnly: true
            - name: tls
              mountPath: /var/lib/hubble-relay/tls
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: config
          configMap:
            name: hubble-relay-config
            items:
              - key: config.yaml
                path: config.yaml
        - name: tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-relay-client-certs
                  items:
                    - key: ca.crt
                      path: hubble-server-ca.crt
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          volumeMounts:
            - name: hubble-ui-nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: tmp-dir
              mountPath: /tmp
          terminationMessagePolicy: FallbackToLogsOnError
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - name: grpc
              containerPort: 8090
          volumeMounts:
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
